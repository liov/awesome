[project]
name = "python"
version = "0.1.0"
description = "lang test"
authors = [
    {name = "贾一饼", email = "lby.i@qq.com"},
]
dependencies = [
    "pcb-tools>=0.1.6",
    "flask>=3.0.3",
    "face-recognition>=1.3.0",
    "requests>=2.32.3",
    "cairocffi>=0.9.0",
    "pygerber @ https://github.com/Argmaster/pygerber/releases/download/v2.4.0/pygerber-2.4.0-py3-none-any.whl",
    "matplotlib>=3.9.0",
    "itk>=5.4.0",
    "vtk>=9.3.1",
    "opencv-python>=4.10.0.84",
    "opencv-contrib-python>=4.10.0.84",
    "drawsvg>=2.4.0",
    "cffi>=1.17.0",
    "easyocr>=1.7.2",
]
requires-python = "<3.13,>=3.11"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend","setuptools","setuptools-rust", "wheel", "Cython"]
build-backend = "pdm.backend"


[tool.pdm]
distribution = true

[tool.setuptools.packages]
# Pure Python packages/modules
find = { where = ["python"] }

[[tool.setuptools-rust.ext-modules]]
# Private Rust extension module to be nested into the Python package
target = "hello_world._lib"  # The last part of the name (e.g. "_lib") has to match lib.name in Cargo.toml,
# but you can add a prefix to nest it inside of a Python package.
path = "Cargo.toml"      # Default value, can be omitted
binding = "PyO3"         # Default value, can be omitted